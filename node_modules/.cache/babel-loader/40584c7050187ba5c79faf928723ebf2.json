{"ast":null,"code":"var _jsxFileName = \"/Users/manleenbhatia/GeekStuff/git/react-course-projects/meal-scheduler-e59h98me051/src/components/Bookings.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addMeal, addError } from '../action/meals';\nexport class Bookings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGuestInfo = event => {\n      let guestName = event.target.value;\n\n      if (guestName) {\n        this.setState(prevState => {\n          prevState.usernames = guestName;\n        });\n      }\n    };\n\n    this.handleDateInfo = event => {\n      let dateRange = event.target.value;\n      this.setState(prevState => {\n        prevState.dates = dateRange;\n      });\n    };\n\n    this.listMeals = () => {\n      const finalArray = [];\n      const errorList = [];\n      const startDate = [];\n      const endDate = [];\n      this.setState(prevState => {\n        prevState.guests = this.state.usernames.split(\"\\n\").filter(g => g !== \"\");\n      });\n      this.setState(prevState => {\n        prevState.dates = this.state.dates.split(\"\\n\").filter(d => d !== \"\");\n      });\n\n      for (let j = 0; j < dates.length; j++) {\n        let tempArr = this.state.dateRange[j].split(\"to\");\n        let start = tempArr[0].trim();\n        let end = tempArr[1].trim();\n        startDate.push(start);\n        endDate.push(end);\n      }\n\n      for (let i = 0; i < this.state.guests.length; i++) {\n        let guest = guests[i];\n        let start = startDate[i];\n        let end = endDate[i];\n\n        if (Date.parse(start) < Date.parse(end)) {\n          finalArray.push([guest, start]);\n          finalArray.push([guest, end]);\n        } else {\n          errorList.push(guest);\n        }\n      }\n\n      this.props.dispatch(addMeal(finalArray, errorList));\n    };\n\n    this.state = {\n      usernames: \"\",\n      dates: \"\",\n      guests: [],\n      dateRange: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: \"col-md-6\",\n      multiline: true,\n      rows: \"4\",\n      placeholder: \"Enter the names (one name per line)\",\n      onChange: this.handleGuestInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: \"col-md-6\",\n      multiline: true,\n      rows: \"4\",\n      placeholder: \"Enter the date range for each name (one range per line)\",\n      onChange: this.handleDateInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"block-center\",\n      onClick: this.listMeals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Get Meals Schedule\"));\n  }\n\n}\nexport default connect()(Bookings);","map":{"version":3,"sources":["/Users/manleenbhatia/GeekStuff/git/react-course-projects/meal-scheduler-e59h98me051/src/components/Bookings.js"],"names":["React","Component","PropTypes","TextField","Button","connect","addMeal","addError","Bookings","constructor","props","handleGuestInfo","event","guestName","target","value","setState","prevState","usernames","handleDateInfo","dateRange","dates","listMeals","finalArray","errorList","startDate","endDate","guests","state","split","filter","g","d","j","length","tempArr","start","trim","end","push","i","guest","Date","parse","dispatch","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PropTypes} from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { addMeal, addError } from '../action/meals';\r\n\r\nexport class Bookings extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n       usernames:\"\",\r\n       dates:\"\",\r\n       guests:[],\r\n       dateRange:[]\r\n    }\r\n  }\r\n  handleGuestInfo = (event) => {\r\n    let guestName = event.target.value;\r\n    if(guestName){\r\n    this.setState(prevState => {\r\n      prevState.usernames = guestName;\r\n    });\r\n      }\r\n  }\r\n  handleDateInfo = (event) => {\r\n    let dateRange = event.target.value;\r\n    this.setState(prevState => {\r\n      prevState.dates = dateRange;\r\n    });\r\n  }\r\n\r\n  listMeals = () => {\r\n    const finalArray = [];\r\n    const errorList = [];\r\n    const startDate = [];\r\n    const endDate = [];\r\n    this.setState(prevState => {\r\n      prevState.guests = this.state.usernames.split(\"\\n\").filter(g => g !== \"\" );\r\n    });\r\n    this.setState((prevState) => {\r\n      prevState.dates = this.state.dates.split(\"\\n\").filter(d => d !== \"\");\r\n    })\r\n    for(let j=0;j<dates.length;j++){\r\n        let tempArr = this.state.dateRange[j].split(\"to\");\r\n        let start = tempArr[0].trim();\r\n        let end = tempArr[1].trim();\r\n        startDate.push(start);\r\n        endDate.push(end);\r\n     \r\n    }\r\n    for(let i=0;i<this.state.guests.length;i++){\r\n    let guest = guests[i];\r\n    let start = startDate[i];\r\n    let end = endDate[i];\r\n    if(Date.parse(start) < Date.parse(end)){\r\n    finalArray.push([guest,start]);\r\n    finalArray.push([guest,end]);\r\n    }\r\n    else{\r\n      errorList.push(guest);\r\n    }\r\n    }\r\n    this.props.dispatch(addMeal(finalArray,errorList));\r\n  }\r\n\r\n    render() {\r\n        return (\r\n      <div className=\"row\">\r\n        <TextField\r\n          className=\"col-md-6\"\r\n          multiline\r\n          rows=\"4\"\r\n          placeholder=\"Enter the names (one name per line)\"\r\n          onChange={this.handleGuestInfo}\r\n        />\r\n        <TextField\r\n          className=\"col-md-6\"\r\n          multiline\r\n          rows=\"4\"\r\n          placeholder=\"Enter the date range for each name (one range per line)\"\r\n          onChange={this.handleDateInfo}\r\n        />\r\n        <Button variant=\"outlined\" color=\"primary\" className=\"block-center\" onClick={this.listMeals}>Get Meals Schedule</Button>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect()(Bookings);"]},"metadata":{},"sourceType":"module"}